@model AQACommute.Models.Commute

@{
    ViewBag.Title = "Map Your Route";
}
<script src="~/Scripts/google-maps-api.custom.js"></script>

<h2 class="headFont">Map Your Route</h2>




<div class="container-fluid mapInput">
    <div class="row">
        <div class="col-md-4">
            <div class="form-group" id="createForm">
                <label for="startPoint">Start:</label>
                <input type="text" class="form-control" id="startPoint">
                <label for="endPoint">End:</label>
                <input type="text" class="form-control" id="endPoint">
                <br />
                <button type="button" class="btn btn-default" id="plotPoints">Plot This Trip</button>
                
                <br /><br />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group hideMe">
                            @Html.LabelFor(model => model.CommuteTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CommuteTime, new { htmlAttributes = new { @class = "form-control", id = "commuteTime" } })
                                @Html.ValidationMessageFor(model => model.CommuteTime, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hideMe">
                            @Html.LabelFor(model => model.StartPoint, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StartPoint, new { htmlAttributes = new { @class = "form-control", id = "startInput" } })
                                @Html.ValidationMessageFor(model => model.StartPoint, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hideMe">
                            @Html.LabelFor(model => model.EndPoint, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EndPoint, new { htmlAttributes = new { @class = "form-control", id = "endInput" } })
                                @Html.ValidationMessageFor(model => model.EndPoint, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hideMe">
                            @Html.LabelFor(model => model.TotalMiles, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TotalMiles, new { htmlAttributes = new { @class = "form-control", id = "totalMiles" } })
                                @Html.ValidationMessageFor(model => model.TotalMiles, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hideMe">
                            @Html.LabelFor(model => model.CO2GeneratedLbs, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CO2GeneratedLbs, new { htmlAttributes = new { @class = "form-control", id = "co2GeneratedLbs" } })
                                @Html.ValidationMessageFor(model => model.CO2GeneratedLbs, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hideMe">
                            @Html.LabelFor(model => model.TransportMethodID, "Vehicle", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TransportMethodID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TransportMethodID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <p id="userQuery"></p>
                        <button type="submit" class="btn btn-default" id="createCommute">Yes</button>
                        <button type="button" class="btn btn-default" id="reset">No</button>
                        @*<button type="submit" class="btn btn-default" id="createCommute">Create my Commute</button>*@
                    </div>
                }
                <p id="startInput"></p>
                <p id="endInput"></p>
                <p id="commuteTime"></p>
                <p id="totalMiles"></p>
                <p id="textReturn"></p>
            </div>
        </div>
        <div class="col-md-8">
            <div id="map"></div>
        </div>
    </div>
</div>


<input type="button" class="btn btn-default btn-lg" value="Back to My Commutes" id="btn1" onclick="location.href='@Url.Action("Index", "Commutes")'" />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCJCwd6U0hBRvjTn5WExOGjxrZcz5LdDGI&callback=initMap">
    </script>
}
